{"version":3,"file":"static/webpack/static/development/pages/login.js.bab894d79776bf59c77f.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Router from \"next/router\";\n\nimport checkLoggedIn from \"../lib/checkLoggedIn\";\nimport redirect from \"../lib/redirect\";\n\nconst loginMutation = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password)\n  }\n`;\n\nconst login = () => {\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  function handleChange(e) {\n    setState({ ...state, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <Mutation mutation={loginMutation}>\n      {mutate => (\n        <form\n          onSubmit={async e => {\n            e.preventDefault();\n            const { data } = await mutate({\n              variables: { ...state }\n            });\n\n            if (data.login) {\n              Router.push(\"/\");\n            }\n          }}\n        >\n          <input name=\"email\" value={state.email} onChange={handleChange} />\n          <input\n            name=\"password\"\n            value={state.password}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Sign in!</button>\n        </form>\n      )}\n    </Mutation>\n  );\n};\n\nlogin.getInitialProps = async context => {\n  const { loggedInUser } = await checkLoggedIn(context.apolloClient);\n\n  if (loggedInUser.me) {\n    redirect(context, \"/\");\n  }\n\n  return {};\n};\n\nexport default login;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AADA;AACA;AAHA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}